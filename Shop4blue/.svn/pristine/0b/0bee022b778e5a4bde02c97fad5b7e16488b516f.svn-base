<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.shop.dao.XxProductParameterValueMapper" >
  <resultMap id="BaseResultMap" type="com.shop.entity.XxProductParameterValue" >
    <id column="product" property="product" jdbcType="BIGINT" />
    <id column="parameter_value_key" property="parameterValueKey" jdbcType="BIGINT" />
    <result column="parameter_value" property="parameterValue" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    product, parameter_value_key, parameter_value
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.shop.entity.XxProductParameterValueExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from xx_product_parameter_value
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="com.shop.entity.XxProductParameterValueKey" >
    select 
    <include refid="Base_Column_List" />
    from xx_product_parameter_value
    where product = #{product,jdbcType=BIGINT}
      and parameter_value_key = #{parameterValueKey,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="com.shop.entity.XxProductParameterValueKey" >
    delete from xx_product_parameter_value
    where product = #{product,jdbcType=BIGINT}
      and parameter_value_key = #{parameterValueKey,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.shop.entity.XxProductParameterValueExample" >
    delete from xx_product_parameter_value
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.shop.entity.XxProductParameterValue" >
    insert into xx_product_parameter_value (product, parameter_value_key, parameter_value
      )
    values (#{product,jdbcType=BIGINT}, #{parameterValueKey,jdbcType=BIGINT}, #{parameterValue,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.shop.entity.XxProductParameterValue" >
    insert into xx_product_parameter_value
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="product != null" >
        product,
      </if>
      <if test="parameterValueKey != null" >
        parameter_value_key,
      </if>
      <if test="parameterValue != null" >
        parameter_value,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="product != null" >
        #{product,jdbcType=BIGINT},
      </if>
      <if test="parameterValueKey != null" >
        #{parameterValueKey,jdbcType=BIGINT},
      </if>
      <if test="parameterValue != null" >
        #{parameterValue,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.shop.entity.XxProductParameterValueExample" resultType="java.lang.Integer" >
    select count(*) from xx_product_parameter_value
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update xx_product_parameter_value
    <set >
      <if test="record.product != null" >
        product = #{record.product,jdbcType=BIGINT},
      </if>
      <if test="record.parameterValueKey != null" >
        parameter_value_key = #{record.parameterValueKey,jdbcType=BIGINT},
      </if>
      <if test="record.parameterValue != null" >
        parameter_value = #{record.parameterValue,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update xx_product_parameter_value
    set product = #{record.product,jdbcType=BIGINT},
      parameter_value_key = #{record.parameterValueKey,jdbcType=BIGINT},
      parameter_value = #{record.parameterValue,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.shop.entity.XxProductParameterValue" >
    update xx_product_parameter_value
    <set >
      <if test="parameterValue != null" >
        parameter_value = #{parameterValue,jdbcType=VARCHAR},
      </if>
    </set>
    where product = #{product,jdbcType=BIGINT}
      and parameter_value_key = #{parameterValueKey,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.shop.entity.XxProductParameterValue" >
    update xx_product_parameter_value
    set parameter_value = #{parameterValue,jdbcType=VARCHAR}
    where product = #{product,jdbcType=BIGINT}
      and parameter_value_key = #{parameterValueKey,jdbcType=BIGINT}
  </update>
  <resultMap id="ParameterResultMap" type="com.shop.entity.XxProductParameterValue">
	<id column="product" property="product" jdbcType="BIGINT" />
    <id column="parameter_value_key" property="parameterValueKey" jdbcType="BIGINT" />
    <result column="parameter_value" property="parameterValue" jdbcType="VARCHAR" />
 	<association property="xxparameter" javaType="com.shop.entity.XxParameter">
 	<id column="id" property="id" jdbcType="BIGINT" />
    <result column="create_date" property="createDate" jdbcType="TIMESTAMP" />
    <result column="modify_date" property="modifyDate" jdbcType="TIMESTAMP" />
    <result column="orders" property="orders" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="parameter_group" property="parameterGroup" jdbcType="BIGINT" />
 	</association>
  </resultMap>
  
  <select id="selectParameterAndValue" parameterType="long" resultMap="ParameterResultMap">
  	select 
  		*
		from 
			xx_product_parameter_value a 
					left join 
			xx_parameter b 
					on 
			a.parameter_value_key=b.id 
			where product=#{id}
  </select>
</mapper>