package com.shop.controller.backorder;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import com.shop.entity.XxRefunds;
import com.shop.entity.XxReturns;
import com.shop.service.backorder.Order4ReturnsService;
import com.shop.service.backstage.UtilsService;

import cn.itcast.utils.Page;

@Controller
@RequestMapping("/orderReturns")
public class Order4ReturnsController {
	@Autowired
	private Order4ReturnsService ors;
	@Autowired
	private UtilsService us;

	@RequestMapping("/getReturns")
	public String getReturns(Model model, Integer page, Integer size) {
		if (page == null) {
			page = 1;
		}
		if (size == null) {
			size = 20;
		}
		Page<Map<String, Object>> pages = new Page<>();
		Map<String, Object> map = new HashMap<>();
		map.put("index", (page - 1) * 2);
		map.put("num", size);
		List<Map<String, Object>> list = ors.getReturns(map);
		int total = ors.selectReturnsCount();
		pages.setPage(page);
		pages.setRows(list);
		pages.setSize(size);
		pages.setTotal(total);
		model.addAttribute("page", pages);
		return "backstage/order/returns";

	}

	@SuppressWarnings("rawtypes")
	@RequestMapping("/delReturns")
	public @ResponseBody Page delReturns(String str, int page, int size) {
		us.deleteByUpdate(str, XxReturns.class, "id");
		
		Page<Map<String, Object>> pages = new Page<>();
		Map<String, Object> map = new HashMap<>();
		map.put("index", (page - 1) * 2);
		map.put("num", size);
		List<Map<String, Object>> list = ors.getReturns(map);
		
		int total = ors.selectReturnsCount();
		pages.setPage(page);
		pages.setRows(list);
		pages.setSize(size);
		pages.setTotal(total);
		return pages;
	}
	@RequestMapping("/checkReturnsBySize")
	public String checkReturnsBySize(@RequestParam(value="rows",defaultValue="5")int size,@RequestParam(value="page",defaultValue="1")int page,Model model){
		Page<Map<String, Object>> pages = new Page<>();
		Map<String, Object> map = new HashMap<>();
		map.put("index", (page - 1) * 2);
		map.put("num", size);
		List<Map<String, Object>> list = ors.getReturns(map);
		
		int total = ors.selectReturnsCount();
		pages.setPage(page);
		pages.setRows(list);
		pages.setSize(size);
		pages.setTotal(total);
		model.addAttribute("page", pages);
		
		
 		return "backstage/order/returns";
	}
	
	 @RequestMapping("/returnsDetails")
	   public String returnsDetails(Model model,int id){
		 XxReturns xr = ors.getXxReturnsById(id);
		   model.addAttribute("xs", xr);
		return "backstage/order/returnsdetails";
		   
	   }
}
